{ 
  "suggest.formatItems": [ "kind", "abbr", "menu", "shortcut"],
  "coc.source.around.shortcut": "",
  "suggest.snippetsSupport": true,
  "suggest.enablePreselect": true,
  "suggest.snippetIndicator": " ðŸ’¡",
  "clangd.arguments": ["--background-index", "--clang-tidy"],
  "clangd.fallbackFlags": ["-std=c++20"],
  "clangd.enabled": true,
  "diagnostic.checkCurrentLine": true,
  "flutter.sdk.path": "~/development/flutter/bin/flutter",
  "flutter.sdk.searchPaths": ["~/development/flutter/bin"],
  "coc.preferences.enableMarkdown": true,
  "coc.preferences.useQuickfixForLocations": true,
  "workspace.ignoredFolders": [
    "~/",
    "~/.cargo/**",
    "~/.rustup/**"
  ], 
  "flutter.enabled": true,
  "flutter.lsp.initialization.onlyAnalyzeProjectsWithOpenFiles": true,
  "flutter.UIPath": true,
  "diagnostic.enable": true,
  "rust-analyzer.server.path": "~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rust-analyzer",
  "rust-analyzer.completion.limit": null,
  "rust-analyzer.checkOnSave": true,
  "rust-analyzer.check.features": "all",
  "rust-analyzer.cargo.buildScripts.rebuildOnSave": true,
  "rust-analyzer.joinLines.joinElseIf": true,
  "rust-analyzer.updates.checkOnStartup": true,
  "rust-analyzer.completion.postfix.enable": true,
  "rust-analyzer.enable": true,
  "diagnostic.autoRefresh": true,
  "diagnostic.showDeprecated": true,
  "dart.enableSdkFormatter": true,
  "dart.lineLength": 90,
  "dart.showTodos": true,
  "dart.analysisExcludedFolders": [
    "/build"     
  ],
  "dart.completeFunctionCalls": true,
  "flutter.provider.hot-reload": true,
  "flutter.lsp.initialization.closingLabels": true,
  "flutter.lsp.debug": false,
  "flutter.autoOpenDevLog": true,
  "flutter.autoHideDevLog": true,
  "coc.preferences.formatOnSave": false,
  "javascript.preferences.jsxAttributeCompletionStyle": "auto",
  "javascript.format.enable": true,
  "javascript.format.semicolons": "insert",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.format.enable": true,
  "typescript.format.semicolons": "insert",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "tsserver.useLocalTsdk": true,
  "go.enable": true,
  "go.trace.server": "verbose",
  "eslint.autoFixOnSave": false,
  "prettier.requireConfig": true,
  "prettier.tabWidth": 2,
  "prettier.singleQuote": true,
  "prettier.trailingComma": "all",
  "tsserver.enable": true,
  "tsserver.log": "verbose",
  "git.showCommitInFloating": true,
  "git.semanticCommit.scope": true,
  "coc.preferences.maxFileSize": "70MB",
  "coc.preferences.enableMessageDialog": true,
  "coc.preferences.messageLevel": "warning",
  "workspace.workspaceFolderCheckCwd": false,
  "languageserver": {
   "go": {
      "command": "gopls",
      "rootPatterns": ["go.work", "go.mod", ".vim/", ".git/", ".hg/"],
      "filetypes": ["go"],
      "initializationOptions": {
        "usePlaceholders": true
      }
    },
    "html": {
      "command": "vscode-html-languageserver",
      "args": ["--stdio"],
      "filetypes": ["html"]
    },
    "css": {
      "command": "vscode-css-languageserver",
      "args": ["--stdio"],
      "filetypes": ["css", "scss"]
    },
    "javascript": {
      "command": "typescript-language-server",
      "args": ["--stdio"],
      "filetypes": ["javascript", "javascriptreact"]
    },
    "typescript": {
      "command": "typescript-language-server",
      "args": ["--stdio"],
      "filetypes": ["typescript", "typescriptreact"],
    },
    "tsserver": {
      "command": "typescript-language-server",
      "args": ["--stdio"],
      "filetypes": ["typescript", "typescriptreact"],
    },
    "python": {
      "command": "pyls",
      "filetypes": ["python"],
      "settings": {
        "pyls": {
          "configurationSources": ["flake8"],
          "plugins": {
            "pyls_mypy": {
              "enabled": true,
              "live_mode": false
            },
            "pyls_black": {
              "enabled": true
            },
            "pyls_isort": {
              "enabled": true
            },
            "pyls_flake8": {
              "enabled": true
            }
          }
        }
      }
    }
  },
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  }
}
